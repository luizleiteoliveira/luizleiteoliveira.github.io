name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Install, build, and upload your site
        uses: withastro/action@v3
          # with:
          # path: . # The root location of your Astro project inside the repository. (optional)
          # node-version: 20 # The specific version of Node that should be used to build your site. Defaults to 20. (optional)
        # package-manager: pnpm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

#name: Deploy Site
#
#on:
#  push:
#    branches: [ master ]
#  workflow_dispatch:
#
#jobs:
#  set-deploy-type:
#    runs-on: ubuntu-latest
#    outputs:
#      target: ${{ steps.set-output.outputs.target }}
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: get deployment target
#        run: |
#          TARGET=$(cat DEPLOY_STRATEGY)
#          echo "TARGET=$TARGET" >> $GITHUB_ENV
#
#      - name: check if target is valid
#        if: success() && !contains(fromJSON('["gh-pages", "firebase", "none"]'), env.TARGET)
#        run: echo 'Invalid Deployment Target' && exit 1
#
#      # gh actions doesn't support using the 'env' context on job level ifs for
#      # some reason smh. here we use outputs instead
#      - name: set output to deploy target
#        id: set-output
#        run: echo "::set-output name=target::${{ env.TARGET }}"
#
#  # not sure if anyone wants this but I'm putting this here for those that don't
#  # want to host their site. else the actions will show an annoying x whenever
#  # you push to master
#  deploy-none:
#    runs-on: ubuntu-latest
#    needs: set-deploy-type
#    if: needs.set-deploy-type.outputs.target == 'none'
#    steps:
#      - run: echo 'No Deployment Specified' && exit 0
#
#  deploy-gh-pages:
#    runs-on: ubuntu-latest
#    needs: set-deploy-type
#    if: needs.set-deploy-type.outputs.target == 'gh-pages'
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Deploy Jekyll Site
#      uses: sujaykundu777/jekyll-deploy-action@1.0.3
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
#        GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
#
#  deploy-firebase:
#    runs-on: ubuntu-latest
#    needs: set-deploy-type
#    if: needs.set-deploy-type.outputs.target == 'firebase'
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: setup ruby
#      uses: ruby/setup-ruby@v1
#      with:
#        bundler-cache: true
#
#    - name: build jekyll
#      run: |
#        bundle install
#        bundle exec jekyll build
#
#    - name: deploy to firebase
#      uses: w9jds/firebase-action@master
#      with:
#        args: deploy --only hosting
#      env:
#        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
#        PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
